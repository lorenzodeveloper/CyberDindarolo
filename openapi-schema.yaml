openapi: 3.0.0
info:
  title: CyberDindarolo API
  description: ""
  version: v1
security:
  - Bearer: []
paths:
  /entries/:
    get:
      operationId: entries_list
      description: A viewset for viewing and editing Entry instances.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Entry"
      tags:
        - entries
    post:
      operationId: entries_create
      description: A viewset for viewing and editing Entry instances.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Entry"
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Entry"
      tags:
        - entries
    parameters: []
  "/entries/{id}/":
    get:
      operationId: entries_read
      description: A viewset for viewing and editing Entry instances.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Entry"
      tags:
        - entries
    delete:
      operationId: entries_delete
      description: A viewset for viewing and editing Entry instances.
      responses:
        "204":
          description: ""
      tags:
        - entries
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this entry.
        required: true
        schema:
          type: integer
  /forgot_password/:
    post:
      security: []
      operationId: forgot_password_create
      description: This APIView send an email to the user to reset his password.
      responses:
        "201":
          description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "john.doe80@example.com"
              required:
                - email
      tags:
        - forgot_password
    parameters: []
  /invitations/:
    get:
      operationId: invitations_list
      description: A viewset for viewing and deleting Invitation instances.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Invitation"
      tags:
        - invitations
    post:
      operationId: invitations_create
      description: A viewset for viewing and deleting Invitation instances.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Invitation"
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invitation"
      tags:
        - invitations
    parameters: []
  "/invitations/manage/{invitation}/":
    post:
      operationId: invitations_manage_create
      description: An APIview for managing invitation (accept or decline).
      responses:
        "201":
          description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accept:
                  description: Accept or decline invitation
                  type: integer
                  default: 0
                  minimum: 0
                  maximum: 1
      tags:
        - invitations
    parameters:
      - name: invitation
        in: path
        required: true
        schema:
          type: string

  "/invitations/{id}/":
    get:
      operationId: invitations_read
      description: A viewset for viewing and deleting Invitation instances.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invitation"
      tags:
        - invitations
    delete:
      operationId: invitations_delete
      description: A viewset for viewing and deleting Invitation instances.
      responses:
        "204":
          description: ""
      tags:
        - invitations
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this invitation.
        required: true
        schema:
          type: integer
  /login/:
    post:
      operationId: login_create
      description: An APIview for logging in.
      responses:
        "200":
          description: ""
          content:
            "application/json":
              schema:
                type: object
                properties:
                  user_data:
                    $ref: "#/components/schemas/UserProfile"
                  token:
                    description: User auth token
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  description: User username
                  type: string
                password:
                  description: User password
                  type: string
              required:
                - username
                - password
      tags:
        - login
    parameters: []
  /logout/:
    get:
      operationId: logout_list
      description: An APIView for logging out.
      responses:
        "200":
          description: ""
      tags:
        - logout
    parameters: []
  /piggybanks/:
    get:
      operationId: piggybanks_list
      description: A viewset for viewing and editing PiggyBank instances.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PiggyBank"
      tags:
        - piggybanks
    post:
      operationId: piggybanks_create
      description: A viewset for viewing and editing PiggyBank instances.
      requestBody:
        $ref: "#/components/requestBodies/PiggyBank"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PiggyBank"
      tags:
        - piggybanks
    parameters: []
  "/piggybanks/search/{pattern}/":
    get:
      operationId: piggybanks_search_read
      description: An APIview for searching PiggyBank instances by name.
      responses:
        "200":
          description: ""
      tags:
        - piggybanks
    parameters:
      - name: pattern
        in: path
        required: true
        schema:
          type: string
  "/piggybanks/{id}/":
    get:
      operationId: piggybanks_read
      description: A viewset for viewing and editing PiggyBank instances.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PiggyBank"
      tags:
        - piggybanks
    patch:
      operationId: piggybanks_partial_update
      description: A viewset for viewing and editing PiggyBank instances.
      requestBody:
        $ref: "#/components/requestBodies/PiggyBank"
      responses:
        "202":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PiggyBank"
      tags:
        - piggybanks
    delete:
      operationId: piggybanks_delete
      description: A viewset for viewing and editing PiggyBank instances.
      responses:
        "204":
          description: ""
      tags:
        - piggybanks
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this piggy bank.
        required: true
        schema:
          type: integer
  /products/:
    get:
      operationId: products_list
      description: A viewset for viewing and editing Product instances.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
      tags:
        - products
    post:
      operationId: products_create
      description: A viewset for viewing and editing Product instances.
      requestBody:
        $ref: "#/components/requestBodies/Product"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
      tags:
        - products
    parameters: []
  "/products/search/{pattern}/":
    get:
      operationId: products_search_read
      description: An APIview for searching Product instances by name.
      responses:
        "200":
          description: ""
      tags:
        - products
    parameters:
      - name: pattern
        in: path
        required: true
        schema:
          type: string
  "/products/{id}/":
    get:
      operationId: products_read
      description: A viewset for viewing and editing Product instances.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
      tags:
        - products
    patch:
      operationId: products_partial_update
      description: A viewset for viewing and editing Product instances.
      requestBody:
        $ref: "#/components/requestBodies/Product"
      responses:
        "202":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
      tags:
        - products
    delete:
      operationId: products_delete
      description: A viewset for viewing and editing Product instances.
      responses:
        "204":
          description: ""
      tags:
        - products
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this product.
        required: true
        schema:
          type: integer
  /purchases/:
    get:
      operationId: purchases_list
      description: A viewset for viewing and editing Purchase instances.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Purchase"
      tags:
        - purchases
    post:
      operationId: purchases_create
      description: A viewset for viewing and editing Purchase instances.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Purchase"
        required: true
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Purchase"
      tags:
        - purchases
    parameters: []
  "/purchases/{id}/":
    get:
      operationId: purchases_read
      description: A viewset for viewing and editing Purchase instances.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Purchase"
      tags:
        - purchases
    delete:
      operationId: purchases_delete
      description: A viewset for viewing and editing Purchase instances.
      responses:
        "204":
          description: ""
      tags:
        - purchases
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this purchase.
        required: true
        schema:
          type: integer
  /register/:
    post:
      operationId: register_create
      description: An APIView for signing up new User instances.
      responses:
        "201":
          description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  description: User username
                  type: string
                  example: "JohnDoe80"
                email:
                  description: User email
                  type: string
                  example: "john.doe80@example.com"
                first_name:
                  description: User first name
                  type: string
                  example: "John"
                last_name:
                  description: User last name
                  type: string
                  example: "Doe"
                passwordA:
                  description: password
                  type: string
                  example: "8charMinPWD"
                passwordB:
                  description: password confirmation
                  type: string
                  example: "8charMinPWD"
              required:
                - username
                - email
                - passwordA
                - passwordB
                - first_name
                - last_name
      tags:
        - register
    parameters: []
  "/reset_password/{uidb64}/{token}/":
    get:
      security: []
      operationId: reset_password_read
      summary: This APIView assigns a temporary password to the user and send it to him
        via mail.
      description: |-
        :param uidb64: user identifier in base64
        :param token: one time token for password change
      responses:
        "200":
          description: ""
      tags:
        - reset_password
    parameters:
      - name: token
        in: path
        required: true
        schema:
          type: string
      - name: uidb64
        in: path
        required: true
        schema:
          type: string
  "/stock/{piggybank}/":
    get:
      operationId: stock_read
      description: An APIView for viewing the stock of a pb instance.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Stock"

      tags:
        - stock
    parameters:
      - name: piggybank
        in: path
        required: true
        schema:
          type: string
  "/stock/{piggybank}/{product}/":
    get:
      operationId: stock_read_with_product
      description: An APIView for viewing the stock of a product in pb instance.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Stock"
      tags:
        - stock
    parameters:
      - name: piggybank
        in: path
        required: true
        schema:
          type: string
      - name: product
        in: path
        required: true
        schema:
          type: string
  /users/:
    get:
      operationId: users_list
      description: A viewset for viewing and editing User instances.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserProfileWithoutPB"
      tags:
        - users
    parameters: []
  "/users/inside/{piggybank}/":
    get:
      operationId: users_inside_read
      description: An APIView for viewing users inside pb..
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserProfileWithoutPB"
      tags:
        - users
    parameters:
      - name: piggybank
        in: path
        required: true
        schema:
          type: string
  "/users/search/{pattern}/":
    get:
      operationId: users_search_read
      description: An APIview for searching User instances by username or email.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserProfileWithoutPB"

      tags:
        - users
    parameters:
      - name: pattern
        in: path
        required: true
        schema:
          type: string
  "/users/{auth_user}/":
    get:
      operationId: users_read
      description: A viewset for viewing and editing User instances.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/UserProfileWithoutPB"
                  - $ref: "#/components/schemas/UserProfile"
      tags:
        - users
    patch:
      operationId: users_partial_update
      description: A viewset for viewing and editing User instances.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfileWithoutPB"
        required: true
      responses:
        "202":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileWithoutPB"
      tags:
        - users
    delete:
      operationId: users_delete
      description: A viewset for viewing and editing User instances.
      responses:
        "204":
          description: ""
      tags:
        - users
    parameters:
      - name: auth_user
        in: path
        description: A unique value identifying this user profile.
        required: true
        schema:
          type: string
  "/verify_account/{uidb64}/{token}/":
    get:
      security: []
      operationId: verify_account_read
      summary: This APIView send a one time link to the user mail to verify his mail.
      description: |-
        :param uidb64: user identifier in base64
        :param token: one time token for email confirmation
      responses:
        "200":
          description: ""
      tags:
        - verify_account
    parameters:
      - name: token
        in: path
        required: true
        schema:
          type: string
      - name: uidb64
        in: path
        required: true
        schema:
          type: string
servers:
  - url: http://localhost:8000/api/v1
components:
  requestBodies:
    Product:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Product"
      required: true
    PiggyBank:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PiggyBank"
      required: true
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    Entry:
      required:
        - product
        - piggybank
        - entry_price
        - set_quantity
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
          example: 1
        product:
          title: Product
          type: integer
          example: 1
        piggybank:
          title: Piggybank
          type: integer
          example: 1
        entry_date:
          title: Entry date
          type: string
          format: date-time
          readOnly: true
        entry_price:
          title: Entry price
          type: string
          format: decimal
          description: Single set price
          example: 4.99
        entered_by:
          title: Entered by
          type: string
          readOnly: true
          example: 1
        set_quantity:
          title: Set quantity
          type: integer
          maximum: 9223372036854776000
          minimum: 1
          example: 1
    Invitation:
      required:
        - invited
        - piggybank
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
          example: 1
        inviter:
          title: Inviter
          type: integer
          readOnly: true
          example: 1
        inviter_username:
          title: Inviter username
          type: string
          readOnly: true
          minLength: 1
          example: "JohnDoe80"
        invited:
          title: Invited
          type: integer
          example: 2
        invited_username:
          title: Invited username
          type: string
          readOnly: true
          minLength: 1
          example: "JaneDoe81"
        invitation_date:
          title: Invitation date
          type: string
          format: date-time
          readOnly: true
        piggybank:
          title: Piggybank
          type: integer
          example: 1
        piggybank_name:
          title: Piggybank name
          type: string
          readOnly: true
          minLength: 1
          example: "My PiggyBank 1"
    PiggyBank:
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
          example: 1
        pb_name:
          title: Pb name
          type: string
          maxLength: 30
          minLength: 1
          example: "My PiggyBank 1"
        pb_description:
          title: Pb description
          type: string
          maxLength: 255
          nullable: true
          example: "Shared expenses for Greek vacancies"
        created_by:
          title: Created by
          type: string
          readOnly: true
          example: 1
        closed:
          title: Closed
          type: boolean
          example: false
          default: false
    Product:
      required:
        - name
        - pieces
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
          example: 1
        name:
          title: Name
          type: string
          maxLength: 30
          minLength: 1
          example: "Ice Cream (Brand: XYZ)"
        description:
          title: Description
          type: string
          nullable: true
          example: "Chocolate Ice Cream"
        pieces:
          title: Pieces
          type: integer
          description: "[Pieces|Grams|Parts|...] that make up the product"
          maximum: 9223372036854776000
          minimum: 1
          example: 6
    Purchase:
      required:
        - product
        - piggybank
        - pieces
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
          example: 1
        product:
          title: Product
          type: integer
          example: 1
        piggybank:
          title: Piggybank
          type: integer
          example: 1
        purchaser:
          title: Purchaser
          type: string
          readOnly: true
          example: 1
        purchase_date:
          title: Purchase date
          type: string
          format: date-time
          readOnly: true
        unitary_purchase_price:
          title: Unitary purchase price
          type: string
          format: decimal
          readOnly: true
          example: 0.75
          description: "Single piece of the product price"
        pieces:
          title: Pieces
          type: integer
          maximum: 9223372036854776000
          minimum: 1
          example: 4
    UserProfileWithoutPB:
      required:
        - username
        - email
        - first_name
        - last_name
      type: object
      properties:
        auth_user_id:
          title: Auth user id
          type: string
          readOnly: true
          example: 1
        username:
          title: Username
          type: string
          minLength: 1
          example: "JohnDoe80"
        email:
          title: Email
          type: string
          minLength: 1
          example: "john.doe80@example.com"
        first_name:
          title: First name
          type: string
          minLength: 1
          example: "John"
        last_name:
          title: Last name
          type: string
          minLength: 1
          example: "Doe"
    UserProfile:
      required:
        - username
        - email
        - first_name
        - last_name
      type: object
      properties:
        auth_user_id:
          title: Auth user id
          type: string
          readOnly: true
          example: 1
        username:
          title: Username
          type: string
          minLength: 1
          example: "JohnDoe80"
        email:
          title: Email
          type: string
          minLength: 1
          example: "john.doe80@example.com"
        first_name:
          title: First name
          type: string
          minLength: 1
          example: "John"
        last_name:
          title: Last name
          type: string
          minLength: 1
          example: "Doe"
        piggybanks:
          title: Piggy Banks
          type: array
          items:
            type: integer
          example: [1, 2, 3, 4]
    Stock:
      properties:
          product:
            description: "product id"
            type: integer
            readOnly: true
            example: 1
          product_name:
            description: "product name"
            type: string
            readOnly: true
            example: "Ice Cream (Brand XYZ)"
          product_description:
            description: "product description"
            example: "Chocolate Ice Cream"
            readOnly: true
            type: string
          piggybank:
            description: "piggybank id"
            example: 1
            readOnly: true
            type: integer
          entry_date:
            description: "last update date"
            readOnly: true
            type: string
            format: date-time
          entered_by:
            description: "user id who entered this"
            readOnly: true
            type: integer
            example: 1
          entered_by_username:
            description: "user's username who entered this"
            readOnly: true
            type: string
            example: "JohnDoe80"
          unitary_price:
            description: "price of the single unit of the product"
            readOnly: true
            type: number
            format: double
            example: 0.75
          pieces:
            description: "pieces of the product in stock"
            type: integer
            example: 4